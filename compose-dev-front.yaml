# This docker compose will only be used by frontend developers since it isolates the database by the API interfaces
# Ports:
# - Auth API -> 127.0.0.1:5000
# - News API -> 127.0.0.1:6000

version: "3.3"

networks:
  spainews:
    external: false

services:
  redis:
    networks:
      - spainews
    container_name: spainews-redis
    image: redis:latest
    restart: unless-stopped
  mongo:
    container_name: spainews-mongo
    image: mongo:latest
    restart: unless-stopped
    networks:
      - spainews
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: spainews
    volumes:
      - type: bind
        source: ./mongo-initdb.d
        target: /docker-entrypoint-initdb.d
        read_only: true
      - ./mongo-data:/data
  mariadb:
    networks:
      - spainews
    container_name: spainnews-mariadb
    restart: unless-stopped
    image: mariadb:latest
    volumes:
      - type: bind
        source: ./mariadb-init.d
        target: /docker-entrypoint-initdb.d
        read_only: true
      - ./mariadb-data:/var/lib/mysql
    environment:
      MARIADB_ROOT_PASSWORD: spainews
      MARIADB_DATABASE: spainews
      MARIADB_USER: spainews
      MARIADB_PASSWORD: spainews
  auth-api:
    depends_on:
      - mariadb
    user: "auth-api:auth-api"
    container_name: spainews-auth-api
    build:
      context: .
      dockerfile: auth-api.Dockerfile
    restart: unless-stopped
    networks:
      - spainews
    environment:
      SMTP_HOST: "" # TODO: FIX ME
      SMTP_PORT: "" # TODO: FIX ME
      SMTP_FROM: "dashboard@dev-spainews.co" # TODO: FIX ME
      SMTP_USERNAME: "dashboard@dev-spainews.co" # TODO: FIX ME
      SMTP_PASSWORD: "password" # TODO: FIX ME
      REDIS_ADDRESS: "redis:6379"
      MARIA_URL: "spainews:spainews@tcp(mariadb:3306)/spainews?parseTime=true"
      LISTEN_ADDRESS: "auth-api:5000"
    ports:
      - "127.0.0.1:5000:5000"